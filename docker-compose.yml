version: '3.8'

services:
  frontend:
    image: node:18
    container_name: restaurant-vite-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3718:3000"
    environment:
      - VITE_API_URL=http://localhost:5000/api/v1
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - TZ=Asia/Ho_Chi_Minh
    command: npm run dev -- --host --port 3000
    depends_on:
      - backend
    stdin_open: true
    tty: true

  backend:
    image: node:18
    container_name: restaurant-node-backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    ports:
      - "5000:5000"
    environment:
      # For Node.js backend to connect to Postgres
      - DATABASE_URL=postgresql://devuser:devpassword@db:5432/restaurant_db?schema=public # Prisma uses this
      # For direct connection parameters if not using DATABASE_URL solely
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=devuser
      - DB_PASSWORD=devpassword
      - DB_NAME=restaurant_db
      - PORT=5000
      - NODE_ENV=development
      - JWT_SECRET=YOUR_VERY_STRONG_AND_SECRET_JWT_KEY # Make sure this is set
      - JWT_EXPIRES_IN=1h
      - TZ=Asia/Ho_Chi_Minh
    command: npm run dev
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true

  db:
    image: postgres:15
    container_name: restaurant-postgres-db
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: restaurant_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d restaurant_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  ###################
  # pgAdmin Service (NEW)
  ###################
  pgadmin:
    image: dpage/pgadmin4:latest # Use a specific version tag in production if desired
    container_name: restaurant-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com # Change this to your email
      PGADMIN_DEFAULT_PASSWORD: adminpassword    # CHANGE THIS to a strong password
      PGADMIN_LISTEN_PORT: 80 # Port pgAdmin listens on *inside* the container
    ports:
      # Map host port 5050 to pgAdmin's container port 80
      - "5050:80"
    volumes:
      # Persist pgAdmin data (server configurations, user settings, etc.)
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db # pgAdmin depends on the database service
    restart: unless-stopped

volumes:
  postgres_data:
  frontend_node_modules:
  backend_node_modules:
  pgadmin_data: # Define the named volume for pgAdmin persistence (NEW)