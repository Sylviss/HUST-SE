1. Frontend Packages (frontend_node_modules)
These packages were installed via npm create vite@5 -- --template react, the subsequent docker-compose exec frontend npm install, and the specific package installs.
Runtime Dependencies:
react@^18.2.0
react-dom@^18.2.0
react-router-dom@6.23.1
@reduxjs/toolkit@2.2.5
react-redux@9.1.2
axios@1.7.2
@tanstack/react-query@5.40.0
react-hook-form@7.51.5
zod@3.23.8
@hookform/resolvers@3.6.0
clsx@2.1.1
date-fns@3.6.0
react-icons@5.2.1
Development Dependencies (devDependencies):
@types/react@^18.2.66 (or similar version from create vite@5)
@types/react-dom@^18.2.22 (or similar version from create vite@5)
@vitejs/plugin-react@^4.3.1 (or similar version from create vite@5)
eslint@^8.57.0 (or similar version from create vite@5)
eslint-plugin-react@^7.34.1 (or similar version from create vite@5)
eslint-plugin-react-hooks@^4.6.0 (or similar version from create vite@5)
eslint-plugin-react-refresh@^0.4.6 (or similar version from create vite@5)
vite@^5.3.1 (or similar version from create vite@5)
tailwindcss@3.4.3
postcss@8.4.38
autoprefixer@10.4.19
2. Backend Packages (backend_node_modules)
These packages were installed via the explicit docker-compose exec backend npm install ... commands (the initial npm install likely did nothing as the initial package.json was empty).
Runtime Dependencies:
express@4.18.2
dotenv@16.3.1
pg@8.11.3
cors@2.8.5
jsonwebtoken@9.0.2
bcryptjs@2.4.3
helmet@7.1.0
express-validator@7.0.1
morgan@1.10.0
express-async-errors@3.1.1
lodash@4.17.21
date-fns@3.6.0
prisma@5.14.0
@prisma/client@5.14.0
Development Dependencies (devDependencies):
nodemon@3.0.2



prisma is initialized, but not migrated